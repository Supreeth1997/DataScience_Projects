{"metadata":{"_change_revision":0,"_is_fork":false,"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.2"},"vscode":{"interpreter":{"hash":"369f2c481f4da34e4445cda3fffd2e751bd1c4d706f27375911949ba6bb62e1c"}},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":23404,"sourceType":"datasetVersion","datasetId":17860}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Import libraries\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"_cell_guid":"c8b7047a-c84c-c0ee-054d-a0c30609cc43","_execution_state":"idle","_uuid":"43047631b7881a23c63a655f5214b2ebaff946fa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"iris = pd.read_csv(\"D:/Supreeth/Iris/Iris.csv\")","metadata":{"_cell_guid":"ced2723b-e83e-6aa0-4ffb-9ace2cc4a5e3","_execution_state":"idle","_uuid":"db8aed63638fcf4833c050541cc0fe5a0b756670","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"iris.head(2) #show the first 2 rows from the dataset","metadata":{"_cell_guid":"ca50ed92-15c7-f9f6-b371-f18393505167","_execution_state":"idle","_uuid":"9a89db0e5a9d3e5cd7cecf06e16dbf1b6f8d3542"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"iris.info()","metadata":{"_cell_guid":"4f9370f1-0672-0d8c-4f21-c7eeb694042c","_execution_state":"idle","_uuid":"46f49d63be72b4eec75da299e355d6dbaa19f65b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"iris.drop('Id',axis=1,inplace=True) #dropping the Id column as it is unecessary","metadata":{"_cell_guid":"af6dd1be-5c24-27f3-6319-eb6af2c65c27","_execution_state":"idle","_uuid":"c9b2172cc499bda6d56d2199b8d286217abbd677","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Exploratory Data Analysis","metadata":{"_cell_guid":"a2e19920-d24b-7551-10c4-e1088c8a4324","_uuid":"f00690de3343002575e680a83ae395ef0060fe1f"}},{"cell_type":"code","source":"fig = iris[iris.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='red', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","metadata":{"_cell_guid":"09a16bf0-067b-8da0-3eed-2014dc8cfec7","_execution_state":"idle","_uuid":"c9fd2c2b0eb51ada3a4f57eb51023cb080a0d308"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.pairplot(iris,hue='Species',height=4)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.FacetGrid(iris, hue=\"Species\", height=5).map(sns.distplot, \"SepalLengthCm\").add_legend()\nsns.FacetGrid(iris, hue=\"Species\", height=5).map(sns.distplot, \"SepalWidthCm\").add_legend()\nsns.FacetGrid(iris, hue=\"Species\", height=5).map(sns.distplot, \"PetalLengthCm\").add_legend()\nsns.FacetGrid(iris, hue=\"Species\", height=5).map(sns.distplot, \"PetalWidthCm\").add_legend()\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.boxplot( y='PetalWidthCm', x= 'Species', data=iris, orient='v' , ax=axes[0, 0])\nsns.boxplot( y='PetalLengthCm', x= 'Species', data=iris, orient='v' , ax=axes[0, 1])\nsns.boxplot( y='SepalLengthCm', x= 'Species', data=iris, orient='v' , ax=axes[1, 0])\nsns.boxplot( y='SepalWidthCm', x= 'Species', data=iris, orient='v' , ax=axes[1, 1])\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = iris[iris.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\" Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","metadata":{"_cell_guid":"ea5060b8-4067-cf46-99d6-a27be10a7e18","_execution_state":"idle","_uuid":"16a42e3a6615e48f7b8ed0a6dbb380de74dcd2c8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"As we can see that the Petal Features are giving a better cluster division compared to the Sepal features. This is an indication that the Petals can help in better and accurate Predictions over the Sepal. We will check that later.","metadata":{"_cell_guid":"3068e91a-2455-f7ae-b1d0-a2114b78ea62","_uuid":"dd90c7e433f42fea8e5836c91959429710491347"}},{"cell_type":"code","source":"iris.hist(edgecolor='black', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","metadata":{"_cell_guid":"d818068d-5110-c64e-ec6e-92bda44a9723","_execution_state":"idle","_uuid":"0ca23638e6e067ffd7501552f346674646e3e1d2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Now let us see how the length and width vary according to the Species","metadata":{"_cell_guid":"cdb55848-d7eb-d66c-dec1-79cbbfba2826","_uuid":"3e8d0f657f996be6f4020b1850148bade9fdc588"}},{"cell_type":"code","source":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=iris)","metadata":{"_cell_guid":"a1d57f07-5c6b-4ab3-ad15-b8b5245c05b9","_execution_state":"idle","_uuid":"15e65581708a5b67ac8f0c1994fa08ef8158e799"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The violinplot shows density of the length and width in the Species. The thinner part denotes that there is less density whereas the fatter part conveys higher density","metadata":{"_cell_guid":"2497705a-9c08-5d8b-6ca0-0edc509e73b9","_uuid":"0e907abebd6751fa3597fd6b08bb24eb13081443"}},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier ","metadata":{"_cell_guid":"c27e7e16-6083-5b53-cda4-c43cf4c79a67","_execution_state":"idle","_uuid":"2b652b2398f95bacb6286eac49694cd422a54e6a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(7,4)) \nsns.heatmap(iris.corr(),annot=True) #draws  heatmap with input as the correlation matrix calculted by(iris.corr())\nplt.show()","metadata":{"_cell_guid":"91f4a3b2-6e38-4d41-9ba0-52c7f43a581c","_execution_state":"idle","_uuid":"86e4d3c42eeec9d2df63d5f60c94e2c30b65ebd7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train, test = train_test_split(iris, test_size = 0.3)# in this our main data is split into train and test\n# the attribute test_size=0.3 splits the data into 70% and 30% ratio. train=70% and test=30%\nprint(train.shape)\nprint(test.shape)","metadata":{"_cell_guid":"a24c3ab9-8c7d-2a78-113f-d337c5c61f09","_execution_state":"idle","_uuid":"87bc90a957a8defb5e24b886b641fb0a9aa5fc42"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_X = train[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]# taking the training data features\ntrain_y=train.Species# output of our training data\ntest_X= test[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']] # taking test data features\ntest_y =test.Species   #output value of test data","metadata":{"_cell_guid":"54dd7ded-5079-fc8c-065b-70bfbfb0b83a","_execution_state":"idle","_uuid":"7a64738b8be79ad6b0f4899e985d3ab5e475f9e1","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Lets check the Train and Test Dataset","metadata":{"_cell_guid":"c7d21e9f-8470-9aae-51ef-feea2cec6b1c","_uuid":"0b18f7458fd76e93ed4a3932001f6f657cadb647"}},{"cell_type":"markdown","source":"### Logistic Regression","metadata":{"_cell_guid":"35d98035-f0ae-7d10-fe90-ec13865c5a14","_uuid":"a2d76e51ba5e61a1a6f19675295f4405c2633eba"}},{"cell_type":"code","source":"model = LogisticRegression()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Logistic Regression is',metrics.accuracy_score(prediction,test_y))","metadata":{"_cell_guid":"ca772378-d3c4-4c87-ada6-b9d50a383b01","_execution_state":"idle","_uuid":"2b53cac02465732a986be2463b3f3411ab043716"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Decision Tree","metadata":{"_cell_guid":"7dfab2de-ebb7-4864-675c-aafef45db7a1","_uuid":"756183a2d33bfd269b75b11ce7980f7f22925004"}},{"cell_type":"code","source":"model=DecisionTreeClassifier()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Decision Tree is',metrics.accuracy_score(prediction,test_y))","metadata":{"_cell_guid":"f918247c-a76b-4c58-5145-1fb0e8ab70b4","_execution_state":"idle","_uuid":"3c8158a18da7910b9ba8c3a5169a3009fb27c84f"},"execution_count":null,"outputs":[]}]}