{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"vscode":{"interpreter":{"hash":"090c6e602aae81dc8adfc3ccd0a3d7e3bb7b63dd6a9ab2e4b9056faa8ebf11d3"}},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8072697,"sourceType":"datasetVersion","datasetId":4763539}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Import the Libraries","metadata":{}},{"cell_type":"code","source":"# importing the required libraries \nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import metrics\nimport calendar\nimport warnings\n\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-04-26T09:39:37.993202Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Read the Data","metadata":{}},{"cell_type":"code","source":"# reading the data\ndata = pd.read_csv(r\"/kaggle/input/rainfall/rainfall in india 1901-2015.csv\")\ndata.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Exploration and Pre-Processing","metadata":{}},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.duplicated().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data['SUBDIVISION'].value_counts()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Dmean = data.loc[:, data.columns != 'SUBDIVISION'].mean()\nprint(Dmean)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# filling na values with mean\ndata = data.fillna(Dmean)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.head(3)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.isnull().any()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.YEAR.unique()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.shape","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Visualization","metadata":{}},{"cell_type":"code","source":"data[[\"SUBDIVISION\",\"ANNUAL\"]].groupby(\"SUBDIVISION\").sum().sort_values(by='ANNUAL',ascending=False).plot(kind='barh',stacked=True,figsize=(15,10))\nplt.xlabel(\"Rainfall in MM\",size=12)\nplt.ylabel(\"Sub-Division\",size=12)\nplt.title(\"Annual Rainfall v/s SubDivisions\")\nplt.grid(axis=\"x\",linestyle=\"-.\")\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Above plot shows the total rainfall from year 1901-2015 in each subdivision,\n from the above plot we note that:-\n 1)west Rajasthan,punjab,delhi have recieved the least rainfall\n 2)Rainfall was more in western states tripura,meghalaya,Arunachal Pradesh,kerala,Goa,karnatka,and also in Andaman`","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(15,8))\ndata.groupby(\"YEAR\").sum()['ANNUAL'].plot(kind=\"line\",color=\"r\",marker=\".\")\nplt.xlabel(\"YEARS\",size=12)\nplt.ylabel(\"RAINFALL IN MM\",size=12)\nplt.grid(axis=\"both\",linestyle=\"-.\")\nplt.title(\"Rainfall over Years\")\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Above graph shows the Rainfall from 1901-2015 in India,\n we observe that :-\n 1)The maximum Rainfall was in 1950s`","metadata":{}},{"cell_type":"code","source":"data[['YEAR', 'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL','AUG', 'SEP',\n      'OCT', 'NOV', 'DEC']].groupby(\"YEAR\").sum().plot(kind=\"line\",figsize=(18,8))\nplt.xlabel(\"Year\",size=13)\nplt.ylabel(\"Rainfall in MM\",size=13)\nplt.title(\"Year v/s Rainfall in each month\",size=20)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`Above plot shows the Year vs Rainfall in each month,\n we observe that:-\n 1)July has heavy rainfall \n 2)Feb has least rainfall `","metadata":{}},{"cell_type":"code","source":"data[['YEAR','Jan-Feb', 'Mar-May',\n       'Jun-Sep', 'Oct-Dec']].groupby(\"YEAR\").sum().plot(figsize=(10,7))\nplt.xlabel(\"Year\",size=13)\nplt.ylabel(\"Rainfall in MM\",size=13)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`From Above Graph we observe that :-\n 1)combined jun,july,august,sept recieves huge rainfall\n 2)combined jan,feb recieves least Rainfall`","metadata":{}},{"cell_type":"code","source":"data[['SUBDIVISION', 'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL',\n       'AUG', 'SEP', 'OCT', 'NOV', 'DEC']].groupby(\"SUBDIVISION\").sum().plot(kind=\"barh\",stacked=True,figsize=(13,8))\nplt.title(\"Sub-Division v/s Rainfall in each month\")\nplt.xlabel(\"Rainfall in MM\",size=12)\nplt.ylabel(\"Sub-Division\",size=12)\nplt.grid(axis=\"x\",linestyle=\"-.\")\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data[['SUBDIVISION', 'Jan-Feb', 'Mar-May',\n       'Jun-Sep', 'Oct-Dec']].groupby(\"SUBDIVISION\").sum().plot(kind=\"barh\",stacked=True,figsize=(16,8))\nplt.xlabel(\"Rainfall in MM\",size=12)\nplt.ylabel(\"Sub-Division\",size=12)\nplt.grid(axis=\"x\",linestyle=\"-.\")\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`From the above two graph we observe that:-\n    1)eastern states have good amont of rainfall in march,april,may`","metadata":{}},{"cell_type":"markdown","source":"`From the Above graph we observe that:\n 1)The lowest rainfall in Tamil Nadu was noted in 2002-2003\n 2)and, The highest was Rainfall was noted in 2005`","metadata":{}},{"cell_type":"code","source":"# correlation b/w each numeric attribute\nplt.figure(figsize=(15,6))\nsns.heatmap(data[['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','ANNUAL']].corr(),annot=True)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"`The above heatmap shows the coorelation between different features in the dataset`","metadata":{}},{"cell_type":"markdown","source":"## Modelling ","metadata":{}},{"cell_type":"code","source":"data[\"SUBDIVISION\"].nunique()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"group = data.groupby('SUBDIVISION')[['YEAR','JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']]\ndata = group.get_group('TAMIL NADU')\ndata.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df=data.melt(['YEAR']).reset_index()\ndf.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df= df[['YEAR','variable','value']].reset_index().sort_values(by=['YEAR','index'])\ndf.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.YEAR.unique()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.columns=['Index','Year','Month','Avg_Rainfall']\ndf.head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=\"Index\",inplace=True)\ndf.head(2)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby(\"Year\").sum().plot()\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"month_to_num = {month: idx for idx, month in enumerate(calendar.month_abbr) if month}\ndf['Month_Num'] = df['Month'].map(month_to_num)\n\nX = np.asanyarray(df[['Year', 'Month_Num']]).astype('int')\ny = np.asanyarray(df['Avg_Rainfall']).astype('int')\n\nprint(X.shape)\nprint(y.shape)\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# splitting the dataset into training and testing\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Linear Regression Model","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nLR = LinearRegression()\nLR.fit(X_train,y_train)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# predicting \ny_train_predict=LR.predict(X_train)\ny_test_predict=LR.predict(X_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"Training Accuracy: \",round(LR.score(X_train,y_train),3)*100)\nprint(\"Testing Accuracy: \",round(LR.score(X_test,y_test),3)*100)\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Random Forest Model","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestRegressor\nrandom_forest_model = RandomForestRegressor(max_depth=100, max_features='sqrt', min_samples_leaf=4,min_samples_split=10, n_estimators=800)\nrandom_forest_model.fit(X_train, y_train)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train_predict=random_forest_model.predict(X_train)\ny_test_predict=random_forest_model.predict(X_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"Training Accuracy: \",round(random_forest_model.score(X_train,y_train),3)*100)\nprint(\"Testing Accuracy: \",round(random_forest_model.score(X_test,y_test),3)*100)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(random_forest_model.predict([[2016,11]]))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}